version: 3

tasks:
  lint:
    desc: Run golangci-lint
    env:
      # renovate: datasource=git-refs depName=golangci-lint lookupName=https://github.com/sagikazarmark/daggerverse currentValue=main
      DAGGER_GOLANGCI_LINT_SHA: 225c4704d5f92ae94e8e294b828d589274ff2097
    cmds:
      - >
        GITHUB_REF= dagger -s call -m github.com/sagikazarmark/daggerverse/golangci-lint@${DAGGER_GOLANGCI_LINT_SHA}
        run --source . --config .golangci.yml stdout
    sources:
      - ./**/*.go

  spellcheck:
    desc: Run spellcheck
    env:
      # renovate: datasource=git-refs depName=spellcheck lookupName=https://github.com/cloudnative-pg/daggerverse currentValue=main
      DAGGER_SPELLCHECK_SHA: 84beb380e1aedba35535977d966956b5f020bbd6
    cmds:
      - >
        GITHUB_REF= dagger -s call -m github.com/cloudnative-pg/daggerverse/spellcheck@${DAGGER_SPELLCHECK_SHA}
        spellcheck --source . with-exec --use-entrypoint --args="" stdout
    sources:
      - ./**/*.md
      - .spellcheck.yaml
      - .wordlist.txt

  commitlint:
    desc: Check for conventional commits
    env:
      # renovate: datasource=git-refs depName=commitlint lookupName=https://github.com/cloudnative-pg/daggerverse currentValue=main
      DAGGER_COMMITLINT_SHA: 84beb380e1aedba35535977d966956b5f020bbd6
    cmds:
      - >
        GITHUB_REF= dagger -s call -m github.com/cloudnative-pg/daggerverse/commitlint@${DAGGER_COMMITLINT_SHA}
        lint --source . --args "--from=origin/main" stdout

  uncommitted:
    desc: Check for uncommitted changes
    env:
      # renovate: datasource=git-refs depName=uncommitted lookupName=https://github.com/cloudnative-pg/daggerverse currentValue=main
      DAGGER_UNCOMMITTED_SHA: 84beb380e1aedba35535977d966956b5f020bbd6
    cmds:
      - GITHUB_REF= dagger -s call -m github.com/cloudnative-pg/daggerverse/uncommitted@${DAGGER_UNCOMMITTED_SHA} check-uncommitted --source . stdout
    sources:
      - ./**

  go-test:
    desc: Run go test
    env:
      # renovate: datasource=docker depName=golang versioning=semver
      GOLANG_IMAGE_VERSION: 1.22.5
      # renovate: datasource=git-refs depName=gotest lookupName=https://github.com/Excoriate/daggerverse currentValue=main
      DAGGER_GOTEST_SHA: 90a5d911a70510f9004544d4a25d39d917f1f668
    cmds:
      - >
        GITHUB_REF= dagger -s call -m github.com/Excoriate/daggerverse/gotest@${DAGGER_GOTEST_SHA}
        base --image-url golang:${GOLANG_IMAGE_VERSION}
        with-cgo-disabled
        run-go-test --src .
    sources:
      - ./**/*.go

  build-image:
    desc: Build a container image for the plugin
    env:
      # renovate: datasource=git-refs depName=docker lookupName=https://github.com/purpleclay/daggerverse currentValue=main
      DAGGER_DOCKER_SHA: dcf4cc7865ada8433f601f728e4a019b68d1fe4e
    cmds:
      - >
        GITHUB_REF= dagger -s call -m github.com/purpleclay/daggerverse/docker@${DAGGER_DOCKER_SHA}
        build --dir . --platform linux/amd64 image > /dev/null

  ci:
    desc: Run the CI pipeline
    deps:
      - spellcheck
      - commitlint
      - uncommitted
      - lint
      - go-test
      - build-image

  publish:
    desc: Build and publish a container image for the plugin
    requires:
      # We expect this to run in a GitHub workflow, so we put a few GitHub-specific vars here
      # to prevent running this task locally by accident.
      vars:
        - CI
        - GITHUB_REPOSITORY
        - GITHUB_REF
        - GITHUB_REF_NAME
        - REGISTRY_USER
        - REGISTRY_PASSWORD
    vars:
      IMAGE_NAME: ghcr.io/{{.GITHUB_REPOSITORY}}{{if not (hasPrefix "refs/tags/v" .GITHUB_REF)}}-testing{{end}}
      # remove /merge suffix from the branch name. This is a workaround for the GitHub workflow on PRs,
      # where the branch name is suffixed with /merge. Prepend pr- to the branch name on PRs.
      IMAGE_VERSION: '{{regexReplaceAll "(\\d+)/merge" .GITHUB_REF_NAME "pr-${1}"}}'
    env:
      # renovate: datasource=git-refs depName=docker lookupName=https://github.com/purpleclay/daggerverse currentValue=main
      DAGGER_DOCKER_SHA: dcf4cc7865ada8433f601f728e4a019b68d1fe4e
    cmds:
      - >
        dagger -s call -m github.com/purpleclay/daggerverse/docker@${DAGGER_DOCKER_SHA}
        --registry ghcr.io --username $REGISTRY_USER --password env:REGISTRY_PASSWORD
        build --dir . --platform linux/amd64
        publish --ref {{.IMAGE_NAME}} --tags {{.IMAGE_VERSION}}

  manifest:
    desc: Update the image in the Kustomization
    requires:
      # We expect this to run in a GitHub workflow, so we put a few GitHub-specific vars here
      # to prevent running this task locally by accident.
      vars:
        - CI
        - GITHUB_REPOSITORY
        - GITHUB_REF
        - GITHUB_REF_NAME
    vars:
      IMAGE_NAME: ghcr.io/{{.GITHUB_REPOSITORY}}{{if not (hasPrefix "refs/tags/v" .GITHUB_REF)}}-testing{{end}}
      # remove /merge suffix from the branch name. This is a workaround for the GitHub workflow on PRs,
      # where the branch name is suffixed with /merge. Prepend pr- to the branch name on PRs.
      IMAGE_VERSION: '{{regexReplaceAll "(\\d+)/merge" .GITHUB_REF_NAME "pr-${1}"}}'
    env:
      # renovate: datasource=git-refs depName=kustomize lookupName=github.com/sagikazarmark/daggerverse currentValue=main
      DAGGER_KUSTOMIZE_SHA: d814d0d7c421348f51cdda96870a05ca2aa8e96a
    cmds:
      - >
        dagger -s call -m github.com/sagikazarmark/daggerverse/kustomize@${DAGGER_KUSTOMIZE_SHA}
        edit --source kubernetes set image --image cnpg-i-hello-world={{.IMAGE_NAME}}:{{.IMAGE_VERSION}}
        directory export --path kubernetes
      - >
        dagger -s call -m github.com/sagikazarmark/daggerverse/kustomize@${DAGGER_KUSTOMIZE_SHA}
        build --source kubernetes export --path manifest.yaml

  upload-manifest-to-release:
    desc: Upload the manifest to the release
    requires:
      # We expect this to run in a GitHub workflow, so we put a few GitHub-specific vars here
      # to prevent running this task locally by accident.
      vars:
        - CI
        - GITHUB_REPOSITORY
        - GITHUB_REF
        - GITHUB_REF_NAME
        - GITHUB_TOKEN
    env:
      # renovate: datasource=git-refs depName=gh lookupName=github.com/sagikazarmark/daggerverse
      DAGGER_GH_SHA: 8f444e2c2b8e8162cea76d702086034ed3edc4f1
    preconditions:
      - sh: "[[ {{.GITHUB_REF}} =~ 'refs/tags/v.*' ]]"
        msg: not a tag, failing
    cmds:
        - >
            dagger -s call -m github.com/sagikazarmark/daggerverse/gh@${DAGGER_GH_SHA}
            with-source --source .
            run --repo {{.GITHUB_REPOSITORY}} --token env:GITHUB_TOKEN
            --cmd "release upload {{.GITHUB_REF_NAME}} manifest.yaml"

  clean:
    desc: Remove autogenerated artifacts
    cmds:
      - rm -rf .task/

  # TODO: daggerize this
  local-dev-build:
    desc: Build the plugin locally
    env:
      CGO_ENABLED: 0
    cmds:
      - go build -o bin/cnpg-i-hello-world main.go
    sources:
      - ./**/*.go

  # TODO: daggerize this
  local-dev-image:
    desc: Build a container image for the plugin locally
    vars:
      IMAGE_VERSION: '{{.IMAGE_VERSION | default "latest"}}'
      IMAGE_NAME: cnpg-i-hello-world:{{.IMAGE_VERSION}}
    cmds:
      - docker build -t {{.IMAGE_NAME}} .
    sources:
      - ./**/*

  # TODO: daggerize this
  local-kind-deploy:
    desc: Apply the plugin to a local kind cluster
    deps:
      - local-dev-image
    env:
      VERSION: '{{.IMAGE_VERSION | default "latest"}}'
    cmds:
      - ./scripts/run.sh
